name: 'integration'

on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  default:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'default'
    permissions:
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'

    - id: 'self'
      name: 'self execution'
      uses: './'
      with:
        keybase_username: '${{ secrets.KEYBASE_USERNAME }}'
        keybase_paperkey: '${{ secrets.KEYBASE_PAPERKEY }}'
        repo: 'keybase://private/briceburg_test/github-action-test'
        paths: '*.secret.tfvars:larry/**/moe.json:foo/test.json'
        target: 'secrets'

    #
    # testdata repository contents;
    # .
    # ├── README.md
    # ├── bar.secret.tfvars
    # ├── foo
    # │   └── test.json
    # ├── foo.secret.tfvars
    # └── larry
    #     └── curly
    #         └── moe.json
    #
    # 3 directories, 5 files
    #
    - name: 'tests'
      run: |
        echo [test] action has valid 'path' output
        (
          echo '${{ steps.self.outputs.paths }}' > output

          echo README.md was skipped
          grep -q --invert-match "README.md" output

          echo globstar expansions work
          grep -q "moe.json" output

          echo glob expansions work
          grep -q "foo.secret.tfvars" output
          grep -q "bar.secret.tfvars" output

          echo explicit paths work
          grep -q "foo/test.json" output
        )

        echo [test] files copied to target
        (
          test -e secrets/foo.secret.tfvars
          test -e secrets/bar.secret.tfvars
          ! test -e secrets/README.md
        )

        echo [test] retain hierarchy with recursive copy
        (
          cd secrets
          tree
          test -e larry/curly/moe.json
          test -e foo/test.json
        )

        echo "[OK] TESTS PASS"
